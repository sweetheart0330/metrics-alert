// Code generated by MockGen. DO NOT EDIT.
// Source: ./interface.go
//
// Generated by this command:
//
//	mockgen -source=./interface.go -destination=./../mocks/mock_agent.go
//

// Package mock_agent is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	sync "sync"

	models "github.com/sweetheart0330/metrics-alert/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockMetricCollector is a mock of MetricCollector interface.
type MockMetricCollector struct {
	ctrl     *gomock.Controller
	recorder *MockMetricCollectorMockRecorder
	isgomock struct{}
}

// MockMetricCollectorMockRecorder is the mock recorder for MockMetricCollector.
type MockMetricCollectorMockRecorder struct {
	mock *MockMetricCollector
}

// NewMockMetricCollector creates a new mock instance.
func NewMockMetricCollector(ctrl *gomock.Controller) *MockMetricCollector {
	mock := &MockMetricCollector{ctrl: ctrl}
	mock.recorder = &MockMetricCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricCollector) EXPECT() *MockMetricCollectorMockRecorder {
	return m.recorder
}

// GetCounter mocks base method.
func (m *MockMetricCollector) GetCounter() models.Metrics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCounter")
	ret0, _ := ret[0].(models.Metrics)
	return ret0
}

// GetCounter indicates an expected call of GetCounter.
func (mr *MockMetricCollectorMockRecorder) GetCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCounter", reflect.TypeOf((*MockMetricCollector)(nil).GetCounter))
}

// GetGauge mocks base method.
func (m *MockMetricCollector) GetGauge() *sync.Map {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGauge")
	ret0, _ := ret[0].(*sync.Map)
	return ret0
}

// GetGauge indicates an expected call of GetGauge.
func (mr *MockMetricCollectorMockRecorder) GetGauge() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGauge", reflect.TypeOf((*MockMetricCollector)(nil).GetGauge))
}
